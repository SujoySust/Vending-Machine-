{
  "contractName": "VendingMachine",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_initialDonutPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "donutBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "donutPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateDonutPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVendingMachineBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "restock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "myPurchase",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "systemBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerEtherBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialDonutPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"donutBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donutPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVendingMachineBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myPurchase\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerEtherBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"restock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateDonutPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"A simple vending machine contract that allows users to purchase donuts using Ether.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize the contract with the initial donut price and an initial donut balance for the contract.\",\"params\":{\"_initialDonutPrice\":\"The initial price of a single donut in Wei.\"}},\"getVendingMachineBalance()\":{\"details\":\"Retrieves the current donut balance of the vending machine.\",\"returns\":{\"_0\":\"The donut balance of the vending machine contract.\"}},\"myPurchase()\":{\"details\":\"Retrieves the donut balance of the caller.\",\"returns\":{\"_0\":\"The donut balance of the caller.\"}},\"ownerEtherBalance()\":{\"details\":\"Retrieves the Ether balance of the contract owner.\",\"returns\":{\"_0\":\"The Ether balance of the contract owner.\"}},\"purchase(uint256)\":{\"details\":\"Allows a user to purchase a specified amount of donuts using Ether.\",\"params\":{\"amount\":\"The amount of donuts to purchase.\"}},\"restock(uint256)\":{\"details\":\"Allows the owner to restock the vending machine with more donuts.\",\"params\":{\"amount\":\"The amount of donuts to add to the vending machine's balance.\"}},\"systemBalance()\":{\"details\":\"Retrieves the system ether balance.\"},\"updateDonutPrice(uint256)\":{\"details\":\"Allows the owner to update the donut price.\",\"params\":{\"newPrice\":\"The new price of a single donut in Wei.\"}},\"withdrawEther(uint256)\":{\"details\":\"Allows the owner to withdraw Ether from the contract.\",\"params\":{\"amount\":\"The amount of Ether to withdraw.\"}}},\"title\":\"VendingMachine\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/VendingMachine.sol\":\"VendingMachine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/VendingMachine.sol\":{\"keccak256\":\"0x6fc07be1e030e2569fbfcd6cc8e5a424472b5fa47dad0c5763177fd00fed1fe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b0d837c4ea739f7b4ea97b4308235c34b785e6a91a6c8fb3e3b00ef4b533d94\",\"dweb:/ipfs/QmXCPJvxBS4zVX4Aw8Rs3FcJibm6ySDAJrr1pukfKz54hZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161108d38038061108d833981810160405281019061003291906100ff565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055506064600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505061012c565b600080fd5b6000819050919050565b6100dc816100c9565b81146100e757600080fd5b50565b6000815190506100f9816100d3565b92915050565b600060208284031215610115576101146100c4565b5b6000610123848285016100ea565b91505092915050565b610f528061013b6000396000f3fe6080604052600436106100a05760003560e01c8063c21a702a11610064578063c21a702a14610193578063ce50e609146101bc578063d5c75672146101e5578063e31e8f1514610210578063e7644d341461023b578063efef39a114610266576100a7565b80633bed33ce146100ac57806375df596a146100d55780638da5cb5b14610100578063990f7e181461012b5780639a020d8a14610156576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610974565b610282565b005b3480156100e157600080fd5b506100ea6103bd565b6040516100f791906109b0565b60405180910390f35b34801561010c57600080fd5b50610115610454565b6040516101229190610a0c565b60405180910390f35b34801561013757600080fd5b50610140610478565b60405161014d91906109b0565b60405180910390f35b34801561016257600080fd5b5061017d60048036038101906101789190610a65565b610546565b60405161018a91906109b0565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190610974565b61055e565b005b3480156101c857600080fd5b506101e360048036038101906101de9190610974565b610645565b005b3480156101f157600080fd5b506101fa6106dd565b60405161020791906109b0565b60405180910390f35b34801561021c57600080fd5b50610225610724565b60405161023291906109b0565b60405180910390f35b34801561024757600080fd5b5061025061072a565b60405161025d91906109b0565b60405180910390f35b610280600480360381019061027b9190610974565b610771565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790610b15565b60405180910390fd5b80471015610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90610b81565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103b9573d6000803e3d6000fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590610b15565b60405180910390fd5b47905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610bed565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e390610c7f565b60405180910390fd5b80600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461063b9190610cce565b9250508190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90610d96565b60405180910390fd5b8060018190555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60015481565b6000600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6001548161077f9190610db6565b3410156107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890610e5c565b60405180910390fd5b80600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90610ec8565b60405180910390fd5b80600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108929190610ee8565b9250508190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108e89190610cce565b925050819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610935573d6000803e3d6000fd5b5050565b600080fd5b6000819050919050565b6109518161093e565b811461095c57600080fd5b50565b60008135905061096e81610948565b92915050565b60006020828403121561098a57610989610939565b5b60006109988482850161095f565b91505092915050565b6109aa8161093e565b82525050565b60006020820190506109c560008301846109a1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f6826109cb565b9050919050565b610a06816109eb565b82525050565b6000602082019050610a2160008301846109fd565b92915050565b6000610a32826109cb565b9050919050565b610a4281610a27565b8114610a4d57600080fd5b50565b600081359050610a5f81610a39565b92915050565b600060208284031215610a7b57610a7a610939565b5b6000610a8984828501610a50565b91505092915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e207769746864726177204574686560008201527f722e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610aff602283610a92565b9150610b0a82610aa3565b604082019050919050565b60006020820190508181036000830152610b2e81610af2565b9050919050565b7f4e6f7420656e6f7567682045746865722062616c616e63650000000000000000600082015250565b6000610b6b601883610a92565b9150610b7682610b35565b602082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b7f4f6e6c7920746865206f776e65722063616e207669657720746869732e000000600082015250565b6000610bd7601d83610a92565b9150610be282610ba1565b602082019050919050565b60006020820190508181036000830152610c0681610bca565b9050919050565b7f4f6e6c7920746865206f776e65722063616e20726573746f636b20746869732060008201527f6d616368696e652e000000000000000000000000000000000000000000000000602082015250565b6000610c69602883610a92565b9150610c7482610c0d565b604082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd98261093e565b9150610ce48361093e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4f6e6c7920746865206f776e65722063616e207570646174652074686520646f60008201527f6e75742070726963652e00000000000000000000000000000000000000000000602082015250565b6000610d80602a83610a92565b9150610d8b82610d24565b604082019050919050565b60006020820190508181036000830152610daf81610d73565b9050919050565b6000610dc18261093e565b9150610dcc8361093e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e0557610e04610c9f565b5b828202905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610e46601483610a92565b9150610e5182610e10565b602082019050919050565b60006020820190508181036000830152610e7581610e39565b9050919050565b7f4e6f7420656e6f75676820646f6e75747320696e2073746f636b000000000000600082015250565b6000610eb2601a83610a92565b9150610ebd82610e7c565b602082019050919050565b60006020820190508181036000830152610ee181610ea5565b9050919050565b6000610ef38261093e565b9150610efe8361093e565b925082821015610f1157610f10610c9f565b5b82820390509291505056fea264697066735822122054217e6660ace58e252e07667b7ab2a469b9063bcf133a238bcf13cd3d4d758064736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063c21a702a11610064578063c21a702a14610193578063ce50e609146101bc578063d5c75672146101e5578063e31e8f1514610210578063e7644d341461023b578063efef39a114610266576100a7565b80633bed33ce146100ac57806375df596a146100d55780638da5cb5b14610100578063990f7e181461012b5780639a020d8a14610156576100a7565b366100a757005b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610974565b610282565b005b3480156100e157600080fd5b506100ea6103bd565b6040516100f791906109b0565b60405180910390f35b34801561010c57600080fd5b50610115610454565b6040516101229190610a0c565b60405180910390f35b34801561013757600080fd5b50610140610478565b60405161014d91906109b0565b60405180910390f35b34801561016257600080fd5b5061017d60048036038101906101789190610a65565b610546565b60405161018a91906109b0565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190610974565b61055e565b005b3480156101c857600080fd5b506101e360048036038101906101de9190610974565b610645565b005b3480156101f157600080fd5b506101fa6106dd565b60405161020791906109b0565b60405180910390f35b34801561021c57600080fd5b50610225610724565b60405161023291906109b0565b60405180910390f35b34801561024757600080fd5b5061025061072a565b60405161025d91906109b0565b60405180910390f35b610280600480360381019061027b9190610974565b610771565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610310576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030790610b15565b60405180910390fd5b80471015610353576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034a90610b81565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156103b9573d6000803e3d6000fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044590610b15565b60405180910390fd5b47905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610509576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050090610bed565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1631905090565b60026020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e390610c7f565b60405180910390fd5b80600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461063b9190610cce565b9250508190555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90610d96565b60405180910390fd5b8060018190555050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b60015481565b6000600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6001548161077f9190610db6565b3410156107c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b890610e5c565b60405180910390fd5b80600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90610ec8565b60405180910390fd5b80600260003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108929190610ee8565b9250508190555080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108e89190610cce565b925050819055503073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610935573d6000803e3d6000fd5b5050565b600080fd5b6000819050919050565b6109518161093e565b811461095c57600080fd5b50565b60008135905061096e81610948565b92915050565b60006020828403121561098a57610989610939565b5b60006109988482850161095f565b91505092915050565b6109aa8161093e565b82525050565b60006020820190506109c560008301846109a1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109f6826109cb565b9050919050565b610a06816109eb565b82525050565b6000602082019050610a2160008301846109fd565b92915050565b6000610a32826109cb565b9050919050565b610a4281610a27565b8114610a4d57600080fd5b50565b600081359050610a5f81610a39565b92915050565b600060208284031215610a7b57610a7a610939565b5b6000610a8984828501610a50565b91505092915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e207769746864726177204574686560008201527f722e000000000000000000000000000000000000000000000000000000000000602082015250565b6000610aff602283610a92565b9150610b0a82610aa3565b604082019050919050565b60006020820190508181036000830152610b2e81610af2565b9050919050565b7f4e6f7420656e6f7567682045746865722062616c616e63650000000000000000600082015250565b6000610b6b601883610a92565b9150610b7682610b35565b602082019050919050565b60006020820190508181036000830152610b9a81610b5e565b9050919050565b7f4f6e6c7920746865206f776e65722063616e207669657720746869732e000000600082015250565b6000610bd7601d83610a92565b9150610be282610ba1565b602082019050919050565b60006020820190508181036000830152610c0681610bca565b9050919050565b7f4f6e6c7920746865206f776e65722063616e20726573746f636b20746869732060008201527f6d616368696e652e000000000000000000000000000000000000000000000000602082015250565b6000610c69602883610a92565b9150610c7482610c0d565b604082019050919050565b60006020820190508181036000830152610c9881610c5c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cd98261093e565b9150610ce48361093e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d1957610d18610c9f565b5b828201905092915050565b7f4f6e6c7920746865206f776e65722063616e207570646174652074686520646f60008201527f6e75742070726963652e00000000000000000000000000000000000000000000602082015250565b6000610d80602a83610a92565b9150610d8b82610d24565b604082019050919050565b60006020820190508181036000830152610daf81610d73565b9050919050565b6000610dc18261093e565b9150610dcc8361093e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e0557610e04610c9f565b5b828202905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b6000610e46601483610a92565b9150610e5182610e10565b602082019050919050565b60006020820190508181036000830152610e7581610e39565b9050919050565b7f4e6f7420656e6f75676820646f6e75747320696e2073746f636b000000000000600082015250565b6000610eb2601a83610a92565b9150610ebd82610e7c565b602082019050919050565b60006020820190508181036000830152610ee181610ea5565b9050919050565b6000610ef38261093e565b9150610efe8361093e565b925082821015610f1157610f10610c9f565b5b82820390509291505056fea264697066735822122054217e6660ace58e252e07667b7ab2a469b9063bcf133a238bcf13cd3d4d758064736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1048:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:1",
                "type": ""
              }
            ],
            "src": "7:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:1",
                "type": ""
              }
            ],
            "src": "334:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:1",
                "type": ""
              }
            ],
            "src": "417:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "608:80:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "618:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "633:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "627:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "627:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "618:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "676:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "649:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "649:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "649:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "586:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "594:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "602:5:1",
                "type": ""
              }
            ],
            "src": "545:143:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:274:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "817:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "819:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "819:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "819:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "792:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "801:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "788:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "788:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "813:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "784:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "781:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "910:128:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "925:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "939:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "929:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "954:74:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1000:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1011:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "996:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "996:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1020:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "964:31:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:64:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "954:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "741:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "752:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "764:6:1",
                "type": ""
              }
            ],
            "src": "694:351:1"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10954:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:1",
                "type": ""
              }
            ],
            "src": "7:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:1",
                "type": ""
              }
            ],
            "src": "334:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:1",
                "type": ""
              }
            ],
            "src": "417:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:1",
                "type": ""
              }
            ],
            "src": "545:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:1",
                "type": ""
              }
            ],
            "src": "690:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:1",
                "type": ""
              }
            ],
            "src": "1025:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1269:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1280:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1265:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1257:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1337:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1293:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1293:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1219:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1231:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1242:4:1",
                "type": ""
              }
            ],
            "src": "1149:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1432:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1404:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1414:7:1",
                "type": ""
              }
            ],
            "src": "1377:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1562:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1572:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1601:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1583:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1583:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1572:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1544:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1554:7:1",
                "type": ""
              }
            ],
            "src": "1509:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1700:61:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1717:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1748:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "1722:25:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1722:32:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1710:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1710:45:1"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1688:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1695:3:1",
                "type": ""
              }
            ],
            "src": "1619:142:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1881:140:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1891:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1903:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1914:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1899:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1899:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1891:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1987:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2000:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2011:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1996:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1996:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1927:59:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1927:87:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1927:87:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1853:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1865:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1876:4:1",
                "type": ""
              }
            ],
            "src": "1767:254:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2072:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2082:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2111:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2093:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2093:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2082:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2054:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2064:7:1",
                "type": ""
              }
            ],
            "src": "2027:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2172:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2229:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2238:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2241:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2231:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2231:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2231:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2195:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2220:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2202:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2202:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2192:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2192:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2185:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2182:63:1"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2165:5:1",
                "type": ""
              }
            ],
            "src": "2129:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2309:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2319:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2341:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2328:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2328:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2319:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2384:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2357:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2357:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2357:33:1"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2287:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2295:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2303:5:1",
                "type": ""
              }
            ],
            "src": "2257:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2468:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2514:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2516:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2516:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2516:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2489:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2498:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2485:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2485:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2510:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2481:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2481:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2478:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2607:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2622:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2636:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2626:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2651:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2686:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2697:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2682:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2682:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2706:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2661:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2661:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2651:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2438:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2449:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2461:6:1",
                "type": ""
              }
            ],
            "src": "2402:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2833:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2850:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2855:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2843:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2843:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2843:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2871:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2890:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2895:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2886:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2886:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2871:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2805:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2810:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2821:11:1",
                "type": ""
              }
            ],
            "src": "2737:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3018:115:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3040:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3048:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3036:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3036:14:1"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2077697468647261772045746865",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3052:34:1",
                        "type": "",
                        "value": "Only the owner can withdraw Ethe"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3029:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3029:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3029:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3108:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3116:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3104:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3104:15:1"
                      },
                      {
                        "hexValue": "722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3121:4:1",
                        "type": "",
                        "value": "r."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3097:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3097:29:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3097:29:1"
                }
              ]
            },
            "name": "store_literal_in_memory_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3010:6:1",
                "type": ""
              }
            ],
            "src": "2912:221:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3285:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3295:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3361:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3366:2:1",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3302:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3302:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3295:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3467:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410",
                      "nodeType": "YulIdentifier",
                      "src": "3378:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3378:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3378:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3480:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3491:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3496:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3487:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3487:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3480:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3273:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3281:3:1",
                "type": ""
              }
            ],
            "src": "3139:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3682:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3692:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3704:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3715:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3700:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3700:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3692:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3739:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3750:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3735:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3758:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3764:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3754:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3754:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3728:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3728:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3728:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3784:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3918:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3792:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3792:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3784:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3662:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3677:4:1",
                "type": ""
              }
            ],
            "src": "3511:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4042:68:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4064:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4072:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4060:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4060:14:1"
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045746865722062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4076:26:1",
                        "type": "",
                        "value": "Not enough Ether balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4053:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4053:50:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4053:50:1"
                }
              ]
            },
            "name": "store_literal_in_memory_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "4034:6:1",
                "type": ""
              }
            ],
            "src": "3936:174:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4262:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4272:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4338:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4343:2:1",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4279:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4279:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4272:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4444:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7",
                      "nodeType": "YulIdentifier",
                      "src": "4355:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4355:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4355:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4457:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4468:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4473:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4464:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4464:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4457:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4250:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4258:3:1",
                "type": ""
              }
            ],
            "src": "4116:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4659:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4669:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4681:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4692:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4677:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4677:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4669:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4716:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4727:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4712:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4712:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4735:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4741:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4731:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4731:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4705:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4705:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4705:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4761:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4895:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4769:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4769:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4761:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4639:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4654:4:1",
                "type": ""
              }
            ],
            "src": "4488:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5019:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5041:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5049:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5037:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5037:14:1"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e207669657720746869732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5053:31:1",
                        "type": "",
                        "value": "Only the owner can view this."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5030:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5030:55:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5030:55:1"
                }
              ]
            },
            "name": "store_literal_in_memory_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5011:6:1",
                "type": ""
              }
            ],
            "src": "4913:179:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5244:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5254:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5320:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5325:2:1",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5261:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5261:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5254:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5426:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716",
                      "nodeType": "YulIdentifier",
                      "src": "5337:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5337:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5337:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5439:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5450:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5455:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5446:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5446:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5439:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5232:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5240:3:1",
                "type": ""
              }
            ],
            "src": "5098:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5641:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5651:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5663:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5674:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5659:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5659:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5651:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5698:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5709:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5694:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5694:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5717:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5723:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5713:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5713:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5687:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5687:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5687:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5743:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5877:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5751:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5751:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5743:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5621:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5636:4:1",
                "type": ""
              }
            ],
            "src": "5470:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6001:121:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6023:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6031:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6019:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6019:14:1"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e20726573746f636b207468697320",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6035:34:1",
                        "type": "",
                        "value": "Only the owner can restock this "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6012:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6012:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6012:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6091:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6099:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6087:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6087:15:1"
                      },
                      {
                        "hexValue": "6d616368696e652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6104:10:1",
                        "type": "",
                        "value": "machine."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6080:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6080:35:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6080:35:1"
                }
              ]
            },
            "name": "store_literal_in_memory_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5993:6:1",
                "type": ""
              }
            ],
            "src": "5895:227:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6274:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6284:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6350:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6355:2:1",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6291:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6291:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6284:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6456:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db",
                      "nodeType": "YulIdentifier",
                      "src": "6367:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6367:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6367:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6469:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6480:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6485:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6476:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6476:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6469:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6262:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6270:3:1",
                "type": ""
              }
            ],
            "src": "6128:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6671:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6681:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6693:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6704:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6689:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6689:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6681:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6728:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6739:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6724:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6724:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6747:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6753:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6743:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6743:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6717:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6717:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6717:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6773:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6907:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6781:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6781:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6773:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6651:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6666:4:1",
                "type": ""
              }
            ],
            "src": "6500:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6953:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6970:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6973:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6963:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6963:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6963:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7067:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7070:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7060:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7060:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7060:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7091:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7094:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7084:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7084:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7084:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6925:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7155:261:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7165:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7188:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7170:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7170:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7165:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7199:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7222:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7204:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7204:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7199:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7362:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7364:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7364:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7364:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7283:1:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7290:66:1",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7358:1:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7286:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7286:74:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7280:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7280:81:1"
                  },
                  "nodeType": "YulIf",
                  "src": "7277:107:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7394:16:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7405:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7408:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7401:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7401:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "7394:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7142:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7145:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7151:3:1",
                "type": ""
              }
            ],
            "src": "7111:305:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7528:123:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7550:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7558:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7546:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7546:14:1"
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e207570646174652074686520646f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7562:34:1",
                        "type": "",
                        "value": "Only the owner can update the do"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7539:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7539:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7539:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7618:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7626:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7614:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7614:15:1"
                      },
                      {
                        "hexValue": "6e75742070726963652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7631:12:1",
                        "type": "",
                        "value": "nut price."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7607:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7607:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7607:37:1"
                }
              ]
            },
            "name": "store_literal_in_memory_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7520:6:1",
                "type": ""
              }
            ],
            "src": "7422:229:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7803:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7813:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7879:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7884:2:1",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7820:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7820:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "7813:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7985:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1",
                      "nodeType": "YulIdentifier",
                      "src": "7896:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7896:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7896:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7998:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8009:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8014:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8005:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8005:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7998:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7791:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7799:3:1",
                "type": ""
              }
            ],
            "src": "7657:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8200:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8210:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8222:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8233:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8218:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8218:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8210:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8257:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8268:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8253:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8253:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8276:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8282:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8272:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8272:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8246:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8246:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8246:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8302:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8436:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8310:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8310:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8302:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8180:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8195:4:1",
                "type": ""
              }
            ],
            "src": "8029:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8502:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8512:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8535:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8517:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8517:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "8512:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8546:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8569:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8551:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8551:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8546:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8744:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8746:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8746:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8746:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8656:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8649:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8649:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8642:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8642:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8664:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8671:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8739:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8667:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8667:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8661:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8661:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8638:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8638:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "8635:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8776:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8791:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8794:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8787:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8787:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8776:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8485:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8488:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8494:7:1",
                "type": ""
              }
            ],
            "src": "8454:348:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8914:64:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8936:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8944:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8932:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8932:14:1"
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8948:22:1",
                        "type": "",
                        "value": "Insufficient balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8925:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8925:46:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8925:46:1"
                }
              ]
            },
            "name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8906:6:1",
                "type": ""
              }
            ],
            "src": "8808:170:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9130:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9140:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9206:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9211:2:1",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9147:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9147:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9140:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9312:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                      "nodeType": "YulIdentifier",
                      "src": "9223:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9223:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9223:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9325:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9336:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9341:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9332:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9332:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9325:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9118:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9126:3:1",
                "type": ""
              }
            ],
            "src": "8984:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9527:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9537:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9549:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9560:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9545:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9545:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9537:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9584:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9595:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9580:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9580:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9603:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9609:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9599:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9599:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9573:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9573:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9573:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9629:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9763:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9637:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9637:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9629:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9507:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9522:4:1",
                "type": ""
              }
            ],
            "src": "9356:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9887:70:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9909:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9917:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9905:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9905:14:1"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820646f6e75747320696e2073746f636b",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9921:28:1",
                        "type": "",
                        "value": "Not enough donuts in stock"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9898:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9898:52:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9898:52:1"
                }
              ]
            },
            "name": "store_literal_in_memory_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9879:6:1",
                "type": ""
              }
            ],
            "src": "9781:176:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10109:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10119:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10185:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10190:2:1",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10126:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10126:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10119:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10291:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78",
                      "nodeType": "YulIdentifier",
                      "src": "10202:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10202:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10202:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10304:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10315:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10320:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10311:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10311:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10304:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10097:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10105:3:1",
                "type": ""
              }
            ],
            "src": "9963:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10506:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10516:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10528:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10539:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10524:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10524:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10516:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10563:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10574:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10559:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10559:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10582:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10588:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10578:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10578:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10552:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10552:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10552:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10608:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10742:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10616:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10616:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10608:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10486:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10501:4:1",
                "type": ""
              }
            ],
            "src": "10335:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10805:146:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10815:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10838:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10820:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10820:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "10815:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10849:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10872:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "10854:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10854:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "10849:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10896:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10898:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10898:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10898:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10890:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10893:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10887:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10887:8:1"
                  },
                  "nodeType": "YulIf",
                  "src": "10884:34:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10928:17:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "10940:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "10943:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "10936:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10936:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "10928:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "10791:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "10794:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "10800:4:1",
                "type": ""
              }
            ],
            "src": "10760:191:1"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can withdraw Ethe\")\n\n        mstore(add(memPtr, 32), \"r.\")\n\n    }\n\n    function abi_encode_t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough Ether balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can view this.\")\n\n    }\n\n    function abi_encode_t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can restock this \")\n\n        mstore(add(memPtr, 32), \"machine.\")\n\n    }\n\n    function abi_encode_t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can update the do\")\n\n        mstore(add(memPtr, 32), \"nut price.\")\n\n    }\n\n    function abi_encode_t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough donuts in stock\")\n\n    }\n\n    function abi_encode_t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "184:3592:0:-:0;;;678:300;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:10;728:5;;:27;;;;;;;;;;;;;;;;;;816:18;803:10;:31;;;;914:3;883:13;:28;905:4;883:28;;;;;;;;;;;;;;;:34;;;;678:300;184:3592;;88:117:1;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;184:3592:0:-;;;;;;;",
  "deployedSourceMap": "184:3592:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:248;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2746:176;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;214:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3453:167;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1753:177;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1119:173;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2575:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;296:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1452:118;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2087:363;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3064:248;3142:5;;;;;;;;;;3128:19;;:10;:19;;;3120:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3229:6;3204:21;:31;;3196:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3282:5;;;;;;;;;;3274:23;;:31;3298:6;3274:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:248;:::o;2746:176::-;2792:7;2833:5;;;;;;;;;;;2819:19;;:10;:19;;;2811:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2894:21;2887:28;;2746:176;:::o;214:28::-;;;;;;;;;;;;:::o;3453:167::-;3503:7;3544:5;;;;;;;;;;;3530:19;;:10;:19;;;3522:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;3600:5;;;;;;;;;;:13;;;3593:20;;3453:167;:::o;374:50::-;;;;;;;;;;;;;;;;;:::o;1753:177::-;1825:5;;;;;;;;;;1811:19;;:10;:19;;;1803:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1917:6;1885:13;:28;1907:4;1885:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;1753:177;:::o;1119:173::-;1202:5;;;;;;;;;;1188:19;;:10;:19;;;1180:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;1277:8;1264:10;:21;;;;1119:173;:::o;2575:101::-;2618:7;2644:13;:25;2658:10;2644:25;;;;;;;;;;;;;;;;2637:32;;2575:101;:::o;296:25::-;;;;:::o;1452:118::-;1509:7;1535:13;:28;1557:4;1535:28;;;;;;;;;;;;;;;;1528:35;;1452:118;:::o;2087:363::-;2176:10;;2167:6;:19;;;;:::i;:::-;2154:9;:32;;2146:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2261:6;2229:13;:28;2251:4;2229:28;;;;;;;;;;;;;;;;:38;;2221:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2340:6;2308:13;:28;2330:4;2308:28;;;;;;;;;;;;;;;;:38;;;;;;;:::i;:::-;;;;;;;;2385:6;2356:13;:25;2370:10;2356:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;2417:4;2401:31;;:42;2433:9;2401:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2087:363;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:104::-;1554:7;1583:24;1601:5;1583:24;:::i;:::-;1572:35;;1509:104;;;:::o;1619:142::-;1722:32;1748:5;1722:32;:::i;:::-;1717:3;1710:45;1619:142;;:::o;1767:254::-;1876:4;1914:2;1903:9;1899:18;1891:26;;1927:87;2011:1;2000:9;1996:17;1987:6;1927:87;:::i;:::-;1767:254;;;;:::o;2027:96::-;2064:7;2093:24;2111:5;2093:24;:::i;:::-;2082:35;;2027:96;;;:::o;2129:122::-;2202:24;2220:5;2202:24;:::i;:::-;2195:5;2192:35;2182:63;;2241:1;2238;2231:12;2182:63;2129:122;:::o;2257:139::-;2303:5;2341:6;2328:20;2319:29;;2357:33;2384:5;2357:33;:::i;:::-;2257:139;;;;:::o;2402:329::-;2461:6;2510:2;2498:9;2489:7;2485:23;2481:32;2478:119;;;2516:79;;:::i;:::-;2478:119;2636:1;2661:53;2706:7;2697:6;2686:9;2682:22;2661:53;:::i;:::-;2651:63;;2607:117;2402:329;;;;:::o;2737:169::-;2821:11;2855:6;2850:3;2843:19;2895:4;2890:3;2886:14;2871:29;;2737:169;;;;:::o;2912:221::-;3052:34;3048:1;3040:6;3036:14;3029:58;3121:4;3116:2;3108:6;3104:15;3097:29;2912:221;:::o;3139:366::-;3281:3;3302:67;3366:2;3361:3;3302:67;:::i;:::-;3295:74;;3378:93;3467:3;3378:93;:::i;:::-;3496:2;3491:3;3487:12;3480:19;;3139:366;;;:::o;3511:419::-;3677:4;3715:2;3704:9;3700:18;3692:26;;3764:9;3758:4;3754:20;3750:1;3739:9;3735:17;3728:47;3792:131;3918:4;3792:131;:::i;:::-;3784:139;;3511:419;;;:::o;3936:174::-;4076:26;4072:1;4064:6;4060:14;4053:50;3936:174;:::o;4116:366::-;4258:3;4279:67;4343:2;4338:3;4279:67;:::i;:::-;4272:74;;4355:93;4444:3;4355:93;:::i;:::-;4473:2;4468:3;4464:12;4457:19;;4116:366;;;:::o;4488:419::-;4654:4;4692:2;4681:9;4677:18;4669:26;;4741:9;4735:4;4731:20;4727:1;4716:9;4712:17;4705:47;4769:131;4895:4;4769:131;:::i;:::-;4761:139;;4488:419;;;:::o;4913:179::-;5053:31;5049:1;5041:6;5037:14;5030:55;4913:179;:::o;5098:366::-;5240:3;5261:67;5325:2;5320:3;5261:67;:::i;:::-;5254:74;;5337:93;5426:3;5337:93;:::i;:::-;5455:2;5450:3;5446:12;5439:19;;5098:366;;;:::o;5470:419::-;5636:4;5674:2;5663:9;5659:18;5651:26;;5723:9;5717:4;5713:20;5709:1;5698:9;5694:17;5687:47;5751:131;5877:4;5751:131;:::i;:::-;5743:139;;5470:419;;;:::o;5895:227::-;6035:34;6031:1;6023:6;6019:14;6012:58;6104:10;6099:2;6091:6;6087:15;6080:35;5895:227;:::o;6128:366::-;6270:3;6291:67;6355:2;6350:3;6291:67;:::i;:::-;6284:74;;6367:93;6456:3;6367:93;:::i;:::-;6485:2;6480:3;6476:12;6469:19;;6128:366;;;:::o;6500:419::-;6666:4;6704:2;6693:9;6689:18;6681:26;;6753:9;6747:4;6743:20;6739:1;6728:9;6724:17;6717:47;6781:131;6907:4;6781:131;:::i;:::-;6773:139;;6500:419;;;:::o;6925:180::-;6973:77;6970:1;6963:88;7070:4;7067:1;7060:15;7094:4;7091:1;7084:15;7111:305;7151:3;7170:20;7188:1;7170:20;:::i;:::-;7165:25;;7204:20;7222:1;7204:20;:::i;:::-;7199:25;;7358:1;7290:66;7286:74;7283:1;7280:81;7277:107;;;7364:18;;:::i;:::-;7277:107;7408:1;7405;7401:9;7394:16;;7111:305;;;;:::o;7422:229::-;7562:34;7558:1;7550:6;7546:14;7539:58;7631:12;7626:2;7618:6;7614:15;7607:37;7422:229;:::o;7657:366::-;7799:3;7820:67;7884:2;7879:3;7820:67;:::i;:::-;7813:74;;7896:93;7985:3;7896:93;:::i;:::-;8014:2;8009:3;8005:12;7998:19;;7657:366;;;:::o;8029:419::-;8195:4;8233:2;8222:9;8218:18;8210:26;;8282:9;8276:4;8272:20;8268:1;8257:9;8253:17;8246:47;8310:131;8436:4;8310:131;:::i;:::-;8302:139;;8029:419;;;:::o;8454:348::-;8494:7;8517:20;8535:1;8517:20;:::i;:::-;8512:25;;8551:20;8569:1;8551:20;:::i;:::-;8546:25;;8739:1;8671:66;8667:74;8664:1;8661:81;8656:1;8649:9;8642:17;8638:105;8635:131;;;8746:18;;:::i;:::-;8635:131;8794:1;8791;8787:9;8776:20;;8454:348;;;;:::o;8808:170::-;8948:22;8944:1;8936:6;8932:14;8925:46;8808:170;:::o;8984:366::-;9126:3;9147:67;9211:2;9206:3;9147:67;:::i;:::-;9140:74;;9223:93;9312:3;9223:93;:::i;:::-;9341:2;9336:3;9332:12;9325:19;;8984:366;;;:::o;9356:419::-;9522:4;9560:2;9549:9;9545:18;9537:26;;9609:9;9603:4;9599:20;9595:1;9584:9;9580:17;9573:47;9637:131;9763:4;9637:131;:::i;:::-;9629:139;;9356:419;;;:::o;9781:176::-;9921:28;9917:1;9909:6;9905:14;9898:52;9781:176;:::o;9963:366::-;10105:3;10126:67;10190:2;10185:3;10126:67;:::i;:::-;10119:74;;10202:93;10291:3;10202:93;:::i;:::-;10320:2;10315:3;10311:12;10304:19;;9963:366;;;:::o;10335:419::-;10501:4;10539:2;10528:9;10524:18;10516:26;;10588:9;10582:4;10578:20;10574:1;10563:9;10559:17;10552:47;10616:131;10742:4;10616:131;:::i;:::-;10608:139;;10335:419;;;:::o;10760:191::-;10800:4;10820:20;10838:1;10820:20;:::i;:::-;10815:25;;10854:20;10872:1;10854:20;:::i;:::-;10849:25;;10893:1;10890;10887:8;10884:34;;;10898:18;;:::i;:::-;10884:34;10943:1;10940;10936:9;10928:17;;10760:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.11;\n\n/**\n * @title VendingMachine\n * @dev A simple vending machine contract that allows users to purchase donuts using Ether.\n */\ncontract VendingMachine {\n    address payable public owner;                // Address of the contract owner\n    uint256 public donutPrice;                   // Price of one donut in Wei\n    mapping (address  => uint256) public donutBalances; // Donut balances of users\n\n    /**\n     * @dev Constructor to initialize the contract with the initial donut price and an initial donut balance for the contract.\n     * @param _initialDonutPrice The initial price of a single donut in Wei.\n     */\n    constructor(uint256 _initialDonutPrice) {\n        owner = payable(msg.sender);             // Set the contract owner\n        donutPrice = _initialDonutPrice;         // Set the initial donut price\n        donutBalances[address(this)] = 100;      // Set an initial donut balance for the contract\n    }\n\n    /**\n     * @dev Allows the owner to update the donut price.\n     * @param newPrice The new price of a single donut in Wei.\n     */\n    function updateDonutPrice(uint256 newPrice) public {\n        require(msg.sender == owner, \"Only the owner can update the donut price.\");\n        donutPrice = newPrice;\n    }\n\n    /**\n     * @dev Retrieves the current donut balance of the vending machine.\n     * @return The donut balance of the vending machine contract.\n     */\n    function getVendingMachineBalance() public view returns (uint256) {\n        return donutBalances[address(this)];\n    }\n\n    /**\n     * @dev Allows the owner to restock the vending machine with more donuts.\n     * @param amount The amount of donuts to add to the vending machine's balance.\n     */\n    function restock(uint256 amount) public {\n        require(msg.sender == owner, \"Only the owner can restock this machine.\");\n        donutBalances[address(this)] += amount;\n    }\n\n    /**\n     * @dev Allows a user to purchase a specified amount of donuts using Ether.\n     * @param amount The amount of donuts to purchase.\n     */\n    function purchase(uint256 amount) public payable {\n        require(msg.value >= amount * donutPrice, \"Insufficient balance\");\n        require(donutBalances[address(this)] >= amount, \"Not enough donuts in stock\");\n        donutBalances[address(this)] -= amount;\n        donutBalances[msg.sender] += amount;\n        payable(address(this)).transfer(msg.value);\n    }\n\n    /**\n     * @dev Retrieves the donut balance of the caller.\n     * @return The donut balance of the caller.\n     */\n    function myPurchase() public view returns (uint256) {\n        return donutBalances[msg.sender];\n    }\n\n    /**\n     * @dev Retrieves the system ether balance.\n     */\n    function systemBalance() public view returns (uint256) {\n        require(msg.sender == owner, \"Only the owner can withdraw Ether.\");\n        return address(this).balance;\n    }\n\n    /**\n     * @dev Allows the owner to withdraw Ether from the contract.\n     * @param amount The amount of Ether to withdraw.\n     */\n    function withdrawEther(uint256 amount) public {\n        require(msg.sender == owner, \"Only the owner can withdraw Ether.\");\n        require(address(this).balance >= amount, \"Not enough Ether balance\");\n        payable(owner).transfer(amount);\n    }\n\n    /**\n     * @dev Retrieves the Ether balance of the contract owner.\n     * @return The Ether balance of the contract owner.\n     */\n    function ownerEtherBalance() public view returns (uint256) {\n        require(msg.sender == owner, \"Only the owner can view this.\");\n        return owner.balance;\n    }\n\n    /**\n     * @dev Fallback function to receive Ether. Allows the contract to accept incoming Ether payments.\n     */\n    receive() external payable {}\n}\n",
  "sourcePath": "/Users/sujoynath/Desktop/Programming/Solidity/VendingMachine/contracts/VendingMachine.sol",
  "ast": {
    "absolutePath": "project:/contracts/VendingMachine.sol",
    "exportedSymbols": {
      "VendingMachine": [
        243
      ]
    },
    "id": 244,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "VendingMachine",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2,
          "nodeType": "StructuredDocumentation",
          "src": "59:124:0",
          "text": " @title VendingMachine\n @dev A simple vending machine contract that allows users to purchase donuts using Ether."
        },
        "fullyImplemented": true,
        "id": 243,
        "linearizedBaseContracts": [
          243
        ],
        "name": "VendingMachine",
        "nameLocation": "193:14:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 4,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "237:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "214:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "214:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e31e8f15",
            "id": 6,
            "mutability": "mutable",
            "name": "donutPrice",
            "nameLocation": "311:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "296:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 5,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "296:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a020d8a",
            "id": 10,
            "mutability": "mutable",
            "name": "donutBalances",
            "nameLocation": "411:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 243,
            "src": "374:50:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 9,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "383:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "374:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 8,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "395:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "718:260:0",
              "statements": [
                {
                  "expression": {
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "728:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 19,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "744:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "744:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 18,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "736:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "736:8:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "736:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "728:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "728:27:0"
                },
                {
                  "expression": {
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "donutPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "803:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25,
                      "name": "_initialDonutPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "816:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "803:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "803:31:0"
                },
                {
                  "expression": {
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 28,
                        "name": "donutBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "883:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 33,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 31,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "905:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$243",
                              "typeString": "contract VendingMachine"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VendingMachine_$243",
                              "typeString": "contract VendingMachine"
                            }
                          ],
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "897:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "897:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "897:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "883:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030",
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "914:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "883:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "883:34:0"
                }
              ]
            },
            "documentation": {
              "id": 11,
              "nodeType": "StructuredDocumentation",
              "src": "458:215:0",
              "text": " @dev Constructor to initialize the contract with the initial donut price and an initial donut balance for the contract.\n @param _initialDonutPrice The initial price of a single donut in Wei."
            },
            "id": 38,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "mutability": "mutable",
                  "name": "_initialDonutPrice",
                  "nameLocation": "698:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "690:26:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "690:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:28:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "718:0:0"
            },
            "scope": 243,
            "src": "678:300:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 56,
              "nodeType": "Block",
              "src": "1170:122:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 48,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1188:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1188:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 47,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1202:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1188:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e207570646174652074686520646f6e75742070726963652e",
                        "id": 49,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1209:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1",
                          "typeString": "literal_string \"Only the owner can update the donut price.\""
                        },
                        "value": "Only the owner can update the donut price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be184c2a50b69b7c9aed9769d8e7dd602e69031a54a3bef228d2b0c2eb97d8a1",
                          "typeString": "literal_string \"Only the owner can update the donut price.\""
                        }
                      ],
                      "id": 44,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1180:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "1180:74:0"
                },
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 52,
                      "name": "donutPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "1264:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53,
                      "name": "newPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41,
                      "src": "1277:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1264:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "1264:21:0"
                }
              ]
            },
            "documentation": {
              "id": 39,
              "nodeType": "StructuredDocumentation",
              "src": "984:130:0",
              "text": " @dev Allows the owner to update the donut price.\n @param newPrice The new price of a single donut in Wei."
            },
            "functionSelector": "ce50e609",
            "id": 57,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateDonutPrice",
            "nameLocation": "1128:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "mutability": "mutable",
                  "name": "newPrice",
                  "nameLocation": "1153:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 57,
                  "src": "1145:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:18:0"
            },
            "returnParameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1170:0:0"
            },
            "scope": 243,
            "src": "1119:173:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "1518:52:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 63,
                      "name": "donutBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1535:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 68,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 66,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "1557:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VendingMachine_$243",
                            "typeString": "contract VendingMachine"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VendingMachine_$243",
                            "typeString": "contract VendingMachine"
                          }
                        ],
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1549:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1549:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1549:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1535:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 62,
                  "id": 69,
                  "nodeType": "Return",
                  "src": "1528:35:0"
                }
              ]
            },
            "documentation": {
              "id": 58,
              "nodeType": "StructuredDocumentation",
              "src": "1298:149:0",
              "text": " @dev Retrieves the current donut balance of the vending machine.\n @return The donut balance of the vending machine contract."
            },
            "functionSelector": "e7644d34",
            "id": 71,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVendingMachineBalance",
            "nameLocation": "1461:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1485:2:0"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 71,
                  "src": "1509:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1509:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1508:9:0"
            },
            "scope": 243,
            "src": "1452:118:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "1793:137:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 81,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 78,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1811:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1811:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 80,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "1825:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1811:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e20726573746f636b2074686973206d616368696e652e",
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1832:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db",
                          "typeString": "literal_string \"Only the owner can restock this machine.\""
                        },
                        "value": "Only the owner can restock this machine."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e904c05611f492fba2161053bb614f8ef4450a471be8215dea44fcd5182815db",
                          "typeString": "literal_string \"Only the owner can restock this machine.\""
                        }
                      ],
                      "id": 77,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1803:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:72:0"
                },
                {
                  "expression": {
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 85,
                        "name": "donutBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "1885:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 90,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 88,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1907:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$243",
                              "typeString": "contract VendingMachine"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VendingMachine_$243",
                              "typeString": "contract VendingMachine"
                            }
                          ],
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1899:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1899:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1899:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1885:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 91,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "1917:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1885:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:38:0"
                }
              ]
            },
            "documentation": {
              "id": 72,
              "nodeType": "StructuredDocumentation",
              "src": "1576:172:0",
              "text": " @dev Allows the owner to restock the vending machine with more donuts.\n @param amount The amount of donuts to add to the vending machine's balance."
            },
            "functionSelector": "c21a702a",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restock",
            "nameLocation": "1762:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1778:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "1770:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1769:16:0"
            },
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:0:0"
            },
            "scope": 243,
            "src": "1753:177:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2136:314:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 102,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2154:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2154:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 104,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "2167:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 105,
                            "name": "donutPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "2176:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2167:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2154:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2188:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 101,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2146:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2146:65:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "2146:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 112,
                            "name": "donutBalances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2229:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 117,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 115,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2251:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VendingMachine_$243",
                                  "typeString": "contract VendingMachine"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VendingMachine_$243",
                                  "typeString": "contract VendingMachine"
                                }
                              ],
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2243:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 113,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2243:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2243:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2229:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 118,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "2261:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2229:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820646f6e75747320696e2073746f636b",
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2269:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78",
                          "typeString": "literal_string \"Not enough donuts in stock\""
                        },
                        "value": "Not enough donuts in stock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6676fc9d1e5a45f3bb852a3b2fa34cbc9fe3b3384d3ecc929cb2871bb992cc78",
                          "typeString": "literal_string \"Not enough donuts in stock\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2221:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2221:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "2221:77:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 123,
                        "name": "donutBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2308:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 128,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 126,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2330:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VendingMachine_$243",
                              "typeString": "contract VendingMachine"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VendingMachine_$243",
                              "typeString": "contract VendingMachine"
                            }
                          ],
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2322:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 124,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2322:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2322:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2308:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2340:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2308:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:38:0"
                },
                {
                  "expression": {
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 132,
                        "name": "donutBalances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2356:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 135,
                      "indexExpression": {
                        "expression": {
                          "id": 133,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2370:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2370:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2356:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 136,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98,
                      "src": "2385:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2356:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 138,
                  "nodeType": "ExpressionStatement",
                  "src": "2356:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 147,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2433:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2433:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 143,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "2417:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VendingMachine_$243",
                                  "typeString": "contract VendingMachine"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VendingMachine_$243",
                                  "typeString": "contract VendingMachine"
                                }
                              ],
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2409:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 141,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2409:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2409:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2401:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2401:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2401:22:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2401:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2401:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "2401:42:0"
                }
              ]
            },
            "documentation": {
              "id": 96,
              "nodeType": "StructuredDocumentation",
              "src": "1936:146:0",
              "text": " @dev Allows a user to purchase a specified amount of donuts using Ether.\n @param amount The amount of donuts to purchase."
            },
            "functionSelector": "efef39a1",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "purchase",
            "nameLocation": "2096:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2113:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "2105:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2104:16:0"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2136:0:0"
            },
            "scope": 243,
            "src": "2087:363:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 163,
              "nodeType": "Block",
              "src": "2627:49:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 158,
                      "name": "donutBalances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "2644:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 161,
                    "indexExpression": {
                      "expression": {
                        "id": 159,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2658:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2658:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2644:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 157,
                  "id": 162,
                  "nodeType": "Return",
                  "src": "2637:32:0"
                }
              ]
            },
            "documentation": {
              "id": 153,
              "nodeType": "StructuredDocumentation",
              "src": "2456:114:0",
              "text": " @dev Retrieves the donut balance of the caller.\n @return The donut balance of the caller."
            },
            "functionSelector": "d5c75672",
            "id": 164,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "myPurchase",
            "nameLocation": "2584:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2594:2:0"
            },
            "returnParameters": {
              "id": 157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 156,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 164,
                  "src": "2618:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2618:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2617:9:0"
            },
            "scope": 243,
            "src": "2575:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2801:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 171,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2819:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2819:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 173,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "2833:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2819:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2077697468647261772045746865722e",
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410",
                          "typeString": "literal_string \"Only the owner can withdraw Ether.\""
                        },
                        "value": "Only the owner can withdraw Ether."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410",
                          "typeString": "literal_string \"Only the owner can withdraw Ether.\""
                        }
                      ],
                      "id": 170,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2811:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2811:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 177,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:66:0"
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 180,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2902:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VendingMachine_$243",
                            "typeString": "contract VendingMachine"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_VendingMachine_$243",
                            "typeString": "contract VendingMachine"
                          }
                        ],
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2894:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2894:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2894:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2894:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 169,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "2887:28:0"
                }
              ]
            },
            "documentation": {
              "id": 165,
              "nodeType": "StructuredDocumentation",
              "src": "2682:59:0",
              "text": " @dev Retrieves the system ether balance."
            },
            "functionSelector": "75df596a",
            "id": 185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "systemBalance",
            "nameLocation": "2755:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2768:2:0"
            },
            "returnParameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2792:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:9:0"
            },
            "scope": 243,
            "src": "2746:176:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 218,
              "nodeType": "Block",
              "src": "3110:202:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3128:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3128:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 194,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "3142:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3128:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e2077697468647261772045746865722e",
                        "id": 196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3149:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410",
                          "typeString": "literal_string \"Only the owner can withdraw Ether.\""
                        },
                        "value": "Only the owner can withdraw Ether."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fb6872882c2a72ab5f73c5465cb241851f0ae97333606da4161d6cbe8559410",
                          "typeString": "literal_string \"Only the owner can withdraw Ether.\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3120:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3120:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3120:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 202,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "3212:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VendingMachine_$243",
                                  "typeString": "contract VendingMachine"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_VendingMachine_$243",
                                  "typeString": "contract VendingMachine"
                                }
                              ],
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3204:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 200,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3204:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3204:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3204:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 205,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "3229:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3204:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682045746865722062616c616e6365",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3237:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7",
                          "typeString": "literal_string \"Not enough Ether balance\""
                        },
                        "value": "Not enough Ether balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f87af43a831b10a818243284227f05f4676b481aedcf9423b9a61e51929a75f7",
                          "typeString": "literal_string \"Not enough Ether balance\""
                        }
                      ],
                      "id": 199,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3196:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3196:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "3196:68:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 215,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "3298:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 212,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4,
                            "src": "3282:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3274:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3274:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3274:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3274:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3274:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3274:31:0"
                }
              ]
            },
            "documentation": {
              "id": 186,
              "nodeType": "StructuredDocumentation",
              "src": "2928:131:0",
              "text": " @dev Allows the owner to withdraw Ether from the contract.\n @param amount The amount of Ether to withdraw."
            },
            "functionSelector": "3bed33ce",
            "id": 219,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawEther",
            "nameLocation": "3073:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3095:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 219,
                  "src": "3087:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3086:16:0"
            },
            "returnParameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:0"
            },
            "scope": 243,
            "src": "3064:248:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 236,
              "nodeType": "Block",
              "src": "3512:108:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3530:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3530:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 228,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4,
                          "src": "3544:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3530:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920746865206f776e65722063616e207669657720746869732e",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3551:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716",
                          "typeString": "literal_string \"Only the owner can view this.\""
                        },
                        "value": "Only the owner can view this."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9c7c7b107e23f5ef067f8d85a19e6653a7e25fa50fdb382cabe9948888e8716",
                          "typeString": "literal_string \"Only the owner can view this.\""
                        }
                      ],
                      "id": 225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3522:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3522:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3522:61:0"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 233,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "3600:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3600:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 224,
                  "id": 235,
                  "nodeType": "Return",
                  "src": "3593:20:0"
                }
              ]
            },
            "documentation": {
              "id": 220,
              "nodeType": "StructuredDocumentation",
              "src": "3318:130:0",
              "text": " @dev Retrieves the Ether balance of the contract owner.\n @return The Ether balance of the contract owner."
            },
            "functionSelector": "990f7e18",
            "id": 237,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerEtherBalance",
            "nameLocation": "3462:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 221,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3479:2:0"
            },
            "returnParameters": {
              "id": 224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 237,
                  "src": "3503:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3503:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3502:9:0"
            },
            "scope": 243,
            "src": "3453:167:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 241,
              "nodeType": "Block",
              "src": "3772:2:0",
              "statements": []
            },
            "documentation": {
              "id": 238,
              "nodeType": "StructuredDocumentation",
              "src": "3626:114:0",
              "text": " @dev Fallback function to receive Ether. Allows the contract to accept incoming Ether payments."
            },
            "id": 242,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3752:2:0"
            },
            "returnParameters": {
              "id": 240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3772:0:0"
            },
            "scope": 243,
            "src": "3745:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 244,
        "src": "184:3592:0",
        "usedErrors": []
      }
    ],
    "src": "33:3744:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xF530331E9ad93e204e3a09D60151D44b7F9C98B7",
      "transactionHash": "0xf3d9d3687eb5168101857011aae0a5d4ab880108e72d594ae0cd92b2b864ab0f"
    }
  },
  "schemaVersion": "3.4.14",
  "updatedAt": "2023-08-08T16:59:08.191Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "A simple vending machine contract that allows users to purchase donuts using Ether.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor to initialize the contract with the initial donut price and an initial donut balance for the contract.",
        "params": {
          "_initialDonutPrice": "The initial price of a single donut in Wei."
        }
      },
      "getVendingMachineBalance()": {
        "details": "Retrieves the current donut balance of the vending machine.",
        "returns": {
          "_0": "The donut balance of the vending machine contract."
        }
      },
      "myPurchase()": {
        "details": "Retrieves the donut balance of the caller.",
        "returns": {
          "_0": "The donut balance of the caller."
        }
      },
      "ownerEtherBalance()": {
        "details": "Retrieves the Ether balance of the contract owner.",
        "returns": {
          "_0": "The Ether balance of the contract owner."
        }
      },
      "purchase(uint256)": {
        "details": "Allows a user to purchase a specified amount of donuts using Ether.",
        "params": {
          "amount": "The amount of donuts to purchase."
        }
      },
      "restock(uint256)": {
        "details": "Allows the owner to restock the vending machine with more donuts.",
        "params": {
          "amount": "The amount of donuts to add to the vending machine's balance."
        }
      },
      "systemBalance()": {
        "details": "Retrieves the system ether balance."
      },
      "updateDonutPrice(uint256)": {
        "details": "Allows the owner to update the donut price.",
        "params": {
          "newPrice": "The new price of a single donut in Wei."
        }
      },
      "withdrawEther(uint256)": {
        "details": "Allows the owner to withdraw Ether from the contract.",
        "params": {
          "amount": "The amount of Ether to withdraw."
        }
      }
    },
    "title": "VendingMachine",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}